{
	"author": {
		"email": "hi@sensiblemetrics.io",
		"name": "Alexander Rogalskiy",
		"url": "https://github.com/AlexRogalskiy"
	},
	"bugs": {
		"email": "hi@sensiblemetrics.io",
		"url": "https://github.com/AlexRogalskiy/java-patterns/issues"
	},
	"cacheDirectories": ["node_modules"],
	"collective": {
		"logo": "https://opencollective.com/opencollective/logo.txt",
		"type": "opencollective",
		"url": "https://opencollective.com/nullables"
	},
	"config": {
		"depth": "--depth 1",
		"get": "submodule",
		"image": "styled-java-patterns",
		"update": "submodule"
	},
	"contributors": [
		{
			"email": "hi@sensiblemetrics.io",
			"name": "Alexander Rogalskiy"
		}
	],
	"description": "Java Design Patterns Documentation",
	"devDependencies": {
		"@bitjson/npm-scripts-info": "^1.0.0",
		"@cadolabs/crowdin-cli": "^3.0.19",
        "@changesets/changelog-github": "^0.4.8",
        "@changesets/cli": "^2.26.0",
        "@changesets/write": "^0.2.3",
		"@commitlint/cli": "^16.2.3",
		"@commitlint/config-conventional": "^16.2.1",
		"@types/node": "^17.0.45",
		"adr-tools": "^2.0.4",
		"alex": "^9.1.0",
		"all-contributors-cli": "^6.20.0",
		"browser-sync": "^2.27.7",
		"changelog-machine": "^1.0.2",
		"chart-csv": "^1.0.3",
		"check-for-leaks": "^1.2.1",
		"chromatic": "^6.14.0",
		"colors": "^1.4.0",
		"conventional-changelog-cli": "^2.1.1",
		"cost-of-modules": "1.0.1",
		"csvnorm": "^1.1.0",
		"danger-plugin-spellcheck": "^2.1.0",
		"deploy-to-gh-pages": "^1.3.7",
		"dockerfile_lint": "^0.3.4",
		"execa": "^5.1.1",
		"git-cz": "^4.7.6",
		"gitbook-cli": "^2.3.2",
		"github-contributors-list": "^1.2.5",
		"husky": "^7.0.1",
		"import-conductor": "^2.4.0",
		"is-ci": "^3.0.1",
		"jscs": "^3.0.7",
		"jshint": "^2.13.4",
		"jsonlint": "^1.6.3",
		"lerna": "^4.0.0",
		"lerna-changelog": "^2.2.0",
		"lerna-update-wizard": "^1.1.2",
		"license-checker": "^25.0.1",
		"linkinator": "^3.0.3",
		"lint-staged": "^11.0.1",
		"lintspaces-cli": "^0.7.1",
		"markdown-link-check": "^3.8.7",
		"markdownlint-cli": "^0.27.1",
		"node-fetch": "^3.2.3",
		"nodemon": "^2.0.15",
		"npm-check-updates": "^16.6.0",
		"npm-package-arg": "^9.0.1",
		"opencollective-postinstall": "^2.0.3",
		"patch-package": "^6.4.7",
		"prettier": "^2.3.2",
		"pretty-quick": "^3.1.1",
		"release-it": "^14.10.0",
		"remark-cli": "^9.0.0",
		"remark-lint-code-block-style": "^2.0.1",
		"remark-lint-ordered-list-marker-value": "^2.0.1",
		"remark-preset-davidtheclark": "^0.12.0",
		"remark-validate-links": "^10.0.4",
		"repo-link-check": "^0.7.1",
		"roadmarks": "^1.6.3",
		"shelljs": "^0.8.5",
		"snyk": "^1.946.0",
		"solidarity": "^3.0.4",
		"sort-package-json": "^1.54.0",
		"stylelint": "^14.8.5",
		"stylelint-config-standard": "^22.0.0",
		"stylelint-order": "^4.1.0",
		"stylelint-scss": "^3.20.1",
		"svgo": "^2.8.0",
		"syncpack": "^6.2.0",
		"tempy": "^2.0.0",
		"textlint": "^12.0.2",
		"textlint-rule-alex": "^3.0.0",
		"textlint-rule-common-misspellings": "^1.0.1",
		"textlint-rule-en-capitalization": "^2.0.2",
		"textlint-rule-stop-words": "^2.0.9",
		"textlint-rule-terminology": "^2.1.5",
		"textlint-rule-write-good": "^2.0.0",
		"ts-node": "^10.7.0",
		"typescript": "^4.6.2",
		"validate-commit-msg": "^2.14.0",
		"webtreemap-cli": "^2.3.2",
		"yalc": "^1.0.0-pre.53",
		"yaml-lint": "^1.2.4"
	},
	"engines": {
		"node": ">= 12.x",
		"npm": ">= 5.0.0",
		"yarn": ">= 3.0.0"
	},
	"envDependencies": {
		"localJSON": "../.env.json"
	},
	"funding": [
		"https://github.com/sponsors/AlexRogalskiy?sponsor=1",
		{
			"type": "opencollective",
			"url": "https://opencollective.com/nullables"
		}
	],
	"homepage": "https://github.com/AlexRogalskiy/java-patterns/",
	"husky": {
		"hooks": {
			"commit-msg": "npm run check:commit",
			"pre-commit": "npm run lint:staged && npm run all",
			"pre-push": "npm run check:all",
			"prepare-commit-msg": "git-cz --hook --non-interactive --type=feat --subject=\"added new features\" || true"
		}
	},
	"keywords": ["java design patterns"],
	"license": "GPL-3.0",
	"maintainers": [
		{
			"email": "hi@sensiblemetrics.io",
			"name": "Alexander Rogalskiy"
		}
	],
	"name": "java-patterns",
	"publishConfig": {
		"access": "public",
		"registry": "https://registry.npmjs.org/",
		"tag": "latest"
	},
	"readmeFilename": "README.md",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/AlexRogalskiy/java-patterns.git"
	},
	"scripts": {
		"_get:submodule": "set DEPTH=\"--depth 1\" git submodule update --init --recursive ${DEPTH:- --depth 1}",
		"_pull:submodule": "set BRANCH=\"master\" git submodule foreach git pull origin ${BRANCH:-master}",
		"_update:submodule": "set DEPTH=\"--depth 1\" git submodule update --remote --recursive ${DEPTH:- --depth 1}",
		"adr:list": "adr-tools list",
		"adr:new": "adr-tools new 'Styled Java Patterns'",
		"all": "npm run format:all && npm run lint:all && npm run check:all && npm run test:all",
		"browsersync": "browser-sync start --server site --config 'bs-config.js' --files 'site'",
		"bump:major": "npm version major --no-git-tag-version",
		"bump:minor": "npm version minor --no-git-tag-version",
		"bump:patch": "npm version patch --no-git-tag-version",
        "changeset": "changeset",
        "changeset:version": "changeset version",
        "changeset:publish": "changeset publish",
		"changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
		"changelog:simple": "changelog-machine --config changelog.config.json",
		"check:all": "npm run pretty && npm run format:check",
		"check:commit": "node scripts/validate-commit-msg.js $HUSKY_GIT_PARAMS",
		"check:imports": "import-conductor --verbose --ignore **/node_modules --source packages/**/*.ts",
		"chromatic": "chromatic --exit-zero-on-changes",
		"clean": "lerna clean --yes",
		"commit": "git-cz",
		"contribs": "all-contributors",
		"contribs:add": "all-contributors add",
		"contribs:generate": "all-contributors generate && cp .all-contributorsrc ./docs/contributors.json",
		"contributors": "githubcontrib --repo java-patterns --owner AlexRogalskiy --format html --sortOrder desc > docs/contributors.html",
		"cost-of-modules": "cost-of-modules --less --no-install --include-dev",
		"crowdin:download": "crowdin --config crowdin.yml download -b $(git rev-parse --abbrev-ref HEAD)",
		"crowdin:pull": "crowdin pull --skip-untranslated-strings",
		"crowdin:upload": "crowdin --config crowdin.yml upload sources --auto-update -b $(git rev-parse --abbrev-ref HEAD)",
		"csv:view": "pspg -s 17 --csv \"datas.csv\"",
		"deploy": "deploy-to-gh-pages --local --update site",
		"deps": "npm install -- --loglevel error",
		"describe": "npm-scripts-info",
		"docker:build": "docker build -f ./distribution/docker-images/dev.Dockerfile -t $npm_package_config_image .",
		"docker:config": "docker-compose config",
		"docker:run": "docker run -ti --rm -v ${PWD}:/usr/src/app -e CI=1 $npm_package_config_image build --strict",
		"docker:start": "docker stack deploy -c docker-compose.yml dev",
		"docker:stop": "docker stack rm dev",
		"env:install": "export NODE_ENV=$(grep NODE_ENV .env | cut -d '=' -f2)",
		"env:linux": "export $(cat .env | xargs) && env",
		"env:windows": "(for /F \"tokens=*\" %i in (.env) do set %i)",
		"format": "prettier --single-quote --list-different --write **/*.{json,yaml,yml}",
		"format:all": "npm run format && npm run format:md",
		"format:check": "prettier --check **/*.{json,yaml,yml}",
		"format:doc": "alex",
		"format:md": "remark-preset-davidtheclark --format || echo 'âœ” Remark format for markdown files is skipping'",
		"get:name": "echo $npm_package_name",
		"get:submodule": "set GET=submodule npm run _get:${GET:-submodule}",
		"get:version": "echo $npm_package_version",
		"git:archive": "git archive --format=tar --prefix=archive-$npm_package_config_image/ HEAD | gzip -9 > archive-$npm_package_version.tar.gz",
		"git:canary-preid": "echo \"$(npm run --silent current-branch)-$(npm run --silent commit-date)\"",
		"git:clean": "git stash && git clean -fdX",
		"git:commit-date": "git log -n 1 --date=format:'%Y-%m-%d-%H-%M-%S' --pretty=format:'%ad'",
		"git:current-branch": "echo \"$(git rev-parse --abbrev-ref HEAD)\" | sed -E 's/refs\\/heads\\///' | sed -E 's/\\W|_/-/g' | sed -e 's/\\//-/'",
		"git:diff": "git --no-pager diff --exit-code --stat HEAD",
		"git:graph": "git log --graph --abbrev-commit --decorate --date=relative --all",
		"git:log": "git log -1 --format='format:%H' HEAD",
		"git:ls": "git cat-file -p HEAD && git ls-tree -r HEAD",
		"git:version": "git rev-parse HEAD > VERSION",
		"gitbook:compile": "gitbook build docs build/docs",
		"gitbook:dev": "npm run gitbook:prepare && npm run gitbook:compile && npm run gitbook:serve",
		"gitbook:prepare": "gitbook install docs",
		"gitbook:serve": "gitbook serve docs build/docs",
		"history:view": "npm run script:history && open datas.html",
		"hooks:pre-commit": "node hooks/pre-commit.js",
		"husky:install": "is-ci || husky install .husky",
		"lerna:canary": "lerna version prerelease --preid canary --message \"Publish Canary\" --exact",
		"lerna:changelog": "lerna-changelog",
		"lerna:deps": "lerna run --parallel --stream deps",
		"lerna:diff": "lerna run diff --",
		"lerna:dist": "lerna run --parallel --stream dist",
		"lerna:docs": "lerna run --parallel --stream compodocs",
		"lerna:license": "lerna run --parallel --stream license",
		"lerna:license:fix": "lerna run --parallel --stream license:fix",
		"lerna:publish": "lerna publish from-git --dist-tag canary --no-verify-access --exact --canary=next --npm-tag=next --yes",
		"lerna:size": "lerna run --parallel --stream size",
		"lerna:solidarity": "lerna run --parallel --stream solidarity",
		"lerna:test": "lerna run --parallel --stream test",
		"license": "license-checker --json > licenses.json",
		"link-check": "repo-link-check -c config/config.yml -s filesystem -u",
		"link-check-dev-server": "repo-link-check -c config/config.yml -r http://localhost:3000",
		"link-check-diff": "repo-link-check -c config/config.yml -d master",
		"link-check-exclude": "repo-link-check -c config/config.yml -s filesystem --unused-patterns-only",
		"link-local": "yalc link",
		"linkcheck:csv": "linkinator \"docs/**/*.md\" --markdown --format CSV --verbosity DEBUG",
		"linkcheck:json": "linkinator \"docs/**/*.md\" --markdown --format JSON --verbosity DEBUG",
		"lint:all": "npm run lint:json && npm run lint:style && npm run lint:yaml && npm run lint:markdown && npm run lint:docker",
		"lint:docker": "dockerfile_lint -f ./distribution/docker-images/ci.Dockerfile -f ./distribution/docker-images/dev.Dockerfile -f ./distribution/docker-images/release.Dockerfile -r default_rules.yaml || echo 'âœ” Dockerfile format is skipping'",
		"lint:js": "jscs *.js",
		"lint:js:simple": "jshint --show-non-errors --verbose --extract=auto *.js",
		"lint:json": "jsonlint --quiet --sort-keys --in-place ./package.json",
		"lint:markdown": "markdownlint --config .markdownlint.yml docs/*.md || echo 'âœ” Markdown format is skipping'",
		"lint:md": "remark-preset-davidtheclark",
		"lint:spaces": "lintspaces ./docs/**/*.{html,less,json} -n -t -d spaces",
		"lint:staged": "lint-staged --no-stash --allow-empty",
		"lint:style": "npm run stylelint -- --fix || echo 'âœ” Stylelint format is skipping'",
		"lint:text": "textlint docs",
		"lint:yaml": "yamllint --strict -c .yaml-lint.yml --ignore=mkdocs.{yaml,yml} --ignore=okteto/**/*.{yaml,yml} --ignore=tilt_modules/**/*.{yaml,yml} --ignore=node_modules/**/*.{yaml,yml} --ignore=charts/**/*.{yaml,yml} --ignore=k8s/**/*.yaml **/*.{yaml,yml}",
		"markdown": "markdown-link-check ./README.md ./SECURITY.md",
		"nodemon": "nodemon",
		"npm:update": "ncu -u",
		"opencollective:install": "opencollective-postinstall || true",
		"optimize:svgo": "find ./docs -name '*.svg' -print0 | xargs -0 -P16 -L20 npx svgo",
		"package:changelog": "npm run dev --base_dir=../../ --workspace ./packages/changelog --if-present",
		"package:contributors": "npm run dev --image_dir=../../images --workspace packages/contributors-view --if-present",
		"package:schema": "npm run dev --source_dir1=../../docs --source_dir2=../../docs --workspace packages/schema --if-present",
		"patch:install": "lerna link && patch-package",
		"postinstall": "npm run husky:install && npm run opencollective:install && npm run terms:install && npm run patch:install",
		"postpublish": "PACKAGE_VERSION=$(cat package.json | grep \\\"version\\\" | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && git tag v$PACKAGE_VERSION && git push --tags",
		"postversion": "git push --follow-tags && npm publish --access public",
		"preinstall": "npm run get:submodule",
		"prepack": "check-for-leaks",
		"prepublishOnly": "npm run all",
		"prepush": "check-for-leaks",
		"pretty": "pretty-quick",
		"pretty:staged": "pretty-quick --staged --pattern '!test/tests/lint/**'",
		"print:version": "cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]' | jq  --raw-input . | jq --slurp . > ./docs/versions.json",
		"pull:submodule": "set PULL=submodule npm run _pull:${PULL:-submodule}",
		"release": "release-it",
		"release-major": "git checkout master && npm run all && npm run bump:major && git commit -a -m 'Build project codebase with major version' && git push origin master --tags",
		"release-minor": "git checkout master && npm run all && npm run bump:minor && git commit -a -m 'Build project codebase with minor version' && git push origin master --tags",
		"release-patch": "git checkout master && npm run all && npm run bump:patch && git commit -a -m 'Build project codebase with patch version' && git push origin master --tags",
		"remark": "remark --frail --quiet .",
		"repo-tag": "REPO_VERSION=`node -e \"console.log(require('./package').version)\"` && echo TAG: v$REPO_VERSION && git commit -a -m v$REPO_VERSION && git push && git tag v$REPO_VERSION && git push --tags;",
		"script:authors": "test -f ./scripts/git_authors.sh && . ./scripts/git_authors.sh || echo 'âœ” Git authors script is missing'",
		"script:changelog": "test -f ./scripts/changelog.js && node --experimental-modules --no-warnings --no-deprecation ./scripts/changelog.js || echo 'âœ” Node changelog script is missing'",
		"script:changelog:simple": "test -f ./scripts/git_changelog.sh && . ./scripts/git_changelog.sh || echo 'âœ” Git changelog script is missing'",
		"script:check:branch": "test -f ./scripts/git_check_branch.sh && . ./scripts/git_check_branch.sh || echo 'âœ” Git check branch script is missing'",
		"script:conflict": "test -f ./scripts/pre-commit.sh && /bin/bash ./scripts/pre-commit.sh || echo 'âœ” Git pre-commit script is missing'",
		"script:heap": "node -e 'console.log(`node heap limit = ${require(\"v8\").getHeapStatistics().heap_size_limit / (1024 * 1024)} Mb`)'",
		"script:history": "test -f ./scripts/git_history.sh && . ./scripts/git_history.sh && csvnorm datas.csv | chart-csv > datas.html || echo 'Git history script is missing'",
		"script:name": "test -f ./scripts/package_app_name.js && node --experimental-modules --no-warnings --no-deprecation ./scripts/package_app_name.js || echo 'âœ” Node package name script is missing'",
		"script:notes": "test -f ./scripts/git_release_notes.sh && . ./scripts/git_release_notes.sh > NOTES.md || echo 'âœ” Git release notes script is missing'",
		"script:size": "test -f ./scripts/git_size.sh && . ./scripts/git_size.sh || echo 'âœ” Git size script is missing'",
		"setheapsize": "export NODE_OPTIONS=--max_old_space_size=2048",
		"snyk:protect": "snyk protect",
		"solidarity": "solidarity",
		"solidarity:update": "solidarity snapshot cli node",
		"sort-package-json": "sort-package-json",
		"stylelint": "stylelint --color --disable-default-ignores --allow-empty-input verbose **/*.{css,scss,sass}",
		"svgo": "svgo --config svgo.config.cjs -i docs/overrides/.icons -o docs/overrides/.icons -q",
		"svgo:base64": "svgo --config svgo.base64.config.cjs -i docs/overrides/.icons -o docs/overrides/.icons -q",
		"svgo:lint": "svgo --config svgo.general.config.js -i docs/overrides/.icons -o docs/overrides/.icons -q",
		"syncpack": "syncpack list-mismatches --source \"packages/*/package.json\"",
		"syncpack:fix": "syncpack fix-mismatches",
		"syncpack:list": "syncpack list-mismatches",
		"term:play": "terminalizer play pretty",
		"term:record": "ZDOTDIR=./recording terminalizer record pretty -c config.yml",
		"term:render": "terminalizer render pretty",
		"terms:install": "node ./scripts/remind-of-terms.js",
		"test:all": "npm run test:license",
		"test:license": "license-checker --production --summary --unknown --onlyAllow=\"Apache-2.0;BSD;ISC;MIT;GPL-3.0;CC-BY-3.0;CC0-1.0;\" || echo 'âœ” License check is skipping'",
		"toc": "roadmarks",
		"treemap": "treemap du node_modules",
		"unlink-local": "yalc remove --all",
		"update": "lernaupdate",
		"update:submodule": "set UPDATE=submodule npm run _update:${UPDATE:-submodule}",
		"validate:commit": "validate-commit-msg",
		"zip": "zip -r $npm_package_config_image.zip ./site"
	},
	"scripts-info": {
		"build": "Clean and rebuild the project",
		"cov": "Rebuild, run tests, then create and open the coverage report",
		"doc": "Generate HTML API documentation and open it in a browser",
		"doc:json": "Generate API documentation in typedoc JSON format",
		"fix": "Try to automatically fix any linting problems",
		"info": "Display information about the package scripts",
		"prepare-release": "One-step: clean, build, test, publish docs, and prep a release",
		"reset": "Delete all untracked files and reset the repo to the last commit",
		"test": "Lint and unit test the project",
		"version": "Bump package.json version, update CHANGELOG.md, tag release",
		"watch": "Watch and rebuild the project on save, then rerun relevant tests"
	},
	"targets": {
		"default": {
			"distDir": ".",
			"optimize": false
		}
	},
	"type": "module",
	"version": "0.0.0",
	"workspaces": {
		"nohoist": ["**/@types/**"],
		"packages": ["packages/*"]
	}
}
